{"version":3,"file":"main.js","mappings":"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","sources":["webpack://graphic_test/./src/webgl/src/utils/setUniforms.ts","webpack://graphic_test/./src/webgl/src/utils/setAttrib.ts","webpack://graphic_test/./src/canvas/distance.ts","webpack://graphic_test/./src/index.ts","webpack://graphic_test/./src/webgl/src/mandelbrot_set/index.ts","webpack://graphic_test/./src/webgl/src/utils/shaderLoader.ts","webpack://graphic_test/./src/webgl/shader/mandelbrot_set/mandelbrot.vert","webpack://graphic_test/./src/webgl/shader/mandelbrot_set/mandelbrot.frag","webpack://graphic_test/./src/webgl/src/index.ts","webpack://graphic_test/./src/canvas/index.ts"],"sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nexport var UniformsType;\r\n(function (UniformsType) {\r\n    UniformsType[\"1f\"] = \"1f\";\r\n    UniformsType[\"1i\"] = \"1i\";\r\n    UniformsType[\"2f\"] = \"2f\";\r\n    UniformsType[\"2i\"] = \"2i\";\r\n    UniformsType[\"3f\"] = \"3f\";\r\n    UniformsType[\"3i\"] = \"3i\";\r\n    UniformsType[\"4f\"] = \"4f\";\r\n    UniformsType[\"4i\"] = \"4i\";\r\n})(UniformsType || (UniformsType = {}));\r\nexport default function setUniforms(gl, program, name, value, type) {\r\n    var u_name = gl.getUniformLocation(program, name);\r\n    if (type) {\r\n        if (value.length > 1) {\r\n            gl[\"uniform\".concat(type)].apply(gl, __spreadArray([u_name], value, false));\r\n        }\r\n        else {\r\n            gl[\"uniform\".concat(type)](u_name, value[0]);\r\n            // gl.uniform1i(u_name, 100)\r\n        }\r\n    }\r\n    else {\r\n        if (value.length > 1) {\r\n            var len = value.length;\r\n            if (len <= 4 && len > 0) {\r\n                gl[\"uniform\".concat(len, \"f\")].apply(gl, __spreadArray([u_name], value, false));\r\n            }\r\n        }\r\n        else {\r\n            gl.uniform1f(u_name, value[0]);\r\n        }\r\n    }\r\n}\r\n// todo 不能直接使用数值变量\r\n","export function setAttrib(gl, program, arr, name) {\r\n    if (name === void 0) { name = 'position'; }\r\n    var bufferId = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, bufferId);\r\n    gl.bufferData(gl.ARRAY_BUFFER, arr, gl.STATIC_DRAW);\r\n    var v_position = gl.getAttribLocation(program, name);\r\n    gl.vertexAttribPointer(v_position, 2, gl.FLOAT, false, 0, 0);\r\n    gl.enableVertexAttribArray(v_position);\r\n    return bufferId;\r\n}\r\nexport function setCells(gl, cells) {\r\n    var cellsBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, cellsBuffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, cells, gl.STATIC_DRAW);\r\n    var cellsCount = cells.length;\r\n    return cellsCount;\r\n}\r\n","var defaultLineStyle = { strokeStyle: \"#6f42c1\", lineWith: 2 };\r\nvar drawLine = function (ctx, p1, p2, lineStyle) {\r\n    if (lineStyle === void 0) { lineStyle = defaultLineStyle; }\r\n    var strokeStyle = lineStyle.strokeStyle, lineWith = lineStyle.lineWith;\r\n    ctx.arc(p1[0], p1[1], lineWith, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.arc(p2[0], p2[1], lineWith, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.fillText(\"(\".concat(p2.toString(), \")\"), p2[0], p2[1] + 10);\r\n    ctx.fillText(\"(\".concat(p1.toString(), \")\"), p1[0], p1[1] + 10);\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = strokeStyle;\r\n    ctx.lineWidth = lineWith;\r\n    ctx.moveTo(p1[0], p1[1]);\r\n    ctx.lineTo(p2[0], p2[1]);\r\n    //   ctx.closePath();\r\n    ctx.stroke();\r\n};\r\nvar drawPoint = function (ctx, p, mark) {\r\n    if (mark === void 0) { mark = \"P\"; }\r\n    ctx.beginPath();\r\n    ctx.arc(p[0], p[1], 2, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.fillText(\"\".concat(mark, \"   \").concat(p.toString()), p[0], p[1] - 10);\r\n};\r\n// const bezier = (ctx: CanvasRenderingContext2D,) => {\r\n// }\r\nvar distance = function (ctx, p1, p2, p) {\r\n    drawLine(ctx, p1, p2);\r\n    drawPoint(ctx, p);\r\n    var v1 = new Vec2(p2[0] - p1[0], p2[1] - p1[1]);\r\n    var v2 = new Vec2(p[0] - p1[0], p[1] - p1[1]);\r\n    ctx.fillText(\"distance: \".concat(Math.abs(v1.cross(v2) / v1.length)), 400, 400);\r\n    ctx.moveTo(50, 50);\r\n    ctx.bezierCurveTo(70, 70, 70, 70, 43, 63);\r\n    ctx.stroke();\r\n};\r\nvar Vec2 = /** @class */ (function () {\r\n    function Vec2(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    Vec2.prototype.cross = function (point) {\r\n        return this.x * point.y - this.y * point.x;\r\n    };\r\n    Object.defineProperty(Vec2.prototype, \"length\", {\r\n        get: function () {\r\n            return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Vec2;\r\n}());\r\nexport { distance, Vec2 };\r\n","import render_webgl from \"./webgl/src/index\";\r\nimport render_canvas from './canvas/index';\r\nvar canvas_test = document.createElement(\"canvas\");\r\nvar webgl_test = document.createElement(\"canvas\");\r\ncanvas_test.width = 500;\r\ncanvas_test.height = 500;\r\nwebgl_test.width = 500;\r\nwebgl_test.height = 500;\r\ndocument.body.appendChild(webgl_test);\r\ndocument.body.appendChild(canvas_test);\r\nvar canvas_context = canvas_test.getContext(\"2d\");\r\nvar webgl_context = webgl_test.getContext(\"webgl\");\r\nfunction render() {\r\n    render_webgl(webgl_context);\r\n    render_canvas(canvas_context, canvas_test);\r\n}\r\nrender();\r\n","import mandelbrotFrag from \"../../shader/mandelbrot_set/mandelbrot.frag\";\r\nimport mandelbrotVert from \"../../shader/mandelbrot_set/mandelbrot.vert\";\r\nimport setUniforms, { UniformsType } from \"../utils/setUniforms\";\r\nimport shaderLoader from \"../utils/shaderLoader\";\r\nimport { setAttrib, setCells } from \"../utils/setAttrib\";\r\nvar mandelbrot = function (gl) {\r\n    var program = shaderLoader(gl, mandelbrotVert, mandelbrotFrag);\r\n    setAttrib(gl, program, new Float32Array([-1, -1, -1, 1, 1, 1, 1, -1]), \"a_vertexPostition\");\r\n    setAttrib(gl, program, new Float32Array([0, 0, 0, 1, 1, 1, 1, 0]), \"uv\");\r\n    setUniforms(gl, program, \"center\", [0, 0]);\r\n    setUniforms(gl, program, \"scale\", [1]);\r\n    setUniforms(gl, program, \"iterations\", [256], UniformsType[\"1i\"]);\r\n    var count = setCells(gl, new Int16Array([0, 1, 2, 2, 0, 3]));\r\n    gl.drawElements(gl.TRIANGLES, count, gl.UNSIGNED_SHORT, 0);\r\n    //   function update() {\r\n    //     const factor = Math.max(0.1, Math.log(1));\r\n    //     setUniforms(gl, program,)\r\n    //     renderer.uniforms.iterations = factor * 500;\r\n    //     requestAnimationFrame(update);\r\n    //   }\r\n    //   setTimeout(update, 2000);\r\n};\r\nexport default mandelbrot;\r\n","export default function shaderLoader(gl, vertexShaderString, fragmentShaderString) {\r\n    // 创建shader 对象\r\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n    gl.shaderSource(vertexShader, vertexShaderString);\r\n    gl.compileShader(vertexShader);\r\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\r\n        console.log(gl.getShaderInfoLog(vertexShader));\r\n    }\r\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    gl.shaderSource(fragmentShader, fragmentShaderString);\r\n    gl.compileShader(fragmentShader);\r\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\r\n        console.log(gl.getShaderInfoLog(fragmentShader));\r\n    }\r\n    // 创建 WebGLProgram 对象，并将这两个 shader 关联到这个 WebGL 程序\r\n    var program = gl.createProgram();\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n        console.log(gl.getProgramInfoLog(program));\r\n    }\r\n    // 通过 useProgram 选择启用这个 WebGLProgram 对象；\r\n    gl.useProgram(program);\r\n    return program;\r\n}\r\n","export default \"attribute vec2 a_vertexPostition;\\r\\n\\r\\nattribute vec2 uv;\\r\\n\\r\\nvarying vec2 vUv;\\r\\n\\r\\n\\r\\nvoid main(){\\r\\n    gl_PointSize = 1.0;\\r\\n    vUv = uv;\\r\\n    gl_Position = vec4(a_vertexPostition, 1, 1);\\r\\n}\";","export default \"precision mediump float;\\r\\nprecision highp int;\\r\\nvarying vec2 vUv;\\r\\n\\r\\nuniform vec2 center;\\r\\nuniform float scale;\\r\\nuniform int iterations;\\r\\n\\r\\nvec2 f(vec2 z,vec2 c){\\r\\n    return mat2(z,-z.y,z.x)*z+c;\\r\\n}\\r\\n\\r\\nvoid main(){\\r\\n    vec2 uv=vUv;\\r\\n    vec2 c=center+4.*(uv-vec2(.5))/scale;\\r\\n    vec2 z=vec2(0.);\\r\\n    bool escaped=false;\\r\\n    int j;\\r\\n    for(int i=0;i<65536;i++){\\r\\n        if(i>iterations)break;\\r\\n        j=i;\\r\\n        z=f(z,c);\\r\\n        if(length(z)>2.){\\r\\n            escaped=true;\\r\\n            break;\\r\\n        }\\r\\n    }\\r\\n    // gl_FragColor.rgb=escaped?vec3(float(j))/float(iterations):vec3(0.);\\r\\n    gl_FragColor.rgb=escaped?(vec3(float(j))/float(iterations)):vec3(0.0, 0.0, 0.0);\\r\\n    gl_FragColor.a=1.;\\r\\n}\";","import mandelbrot from './mandelbrot_set/index';\r\nvar render = function (gl) {\r\n    // particle(gl);\r\n    // render_grid(gl, 36);\r\n    mandelbrot(gl);\r\n};\r\nexport default render;\r\n","import { distance } from \"./distance\";\r\nexport default function render(ctx, ctx_element) {\r\n    distance(ctx, [50, 200], [200, 50], [50, 50]);\r\n}\r\n"],"names":["UniformsType","__spreadArray","to","from","pack","arguments","length","ar","i","l","Array","prototype","slice","call","concat","setUniforms","gl","program","name","value","type","u_name","getUniformLocation","apply","len","uniform1f","setAttrib","arr","bufferId","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","v_position","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","defaultLineStyle","strokeStyle","lineWith","Vec2","x","y","this","cross","point","Object","defineProperty","get","Math","sqrt","pow","enumerable","configurable","canvas_test","document","createElement","webgl_test","width","height","body","appendChild","canvas_context","getContext","webgl_context","vertexShaderString","fragmentShaderString","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","log","getShaderInfoLog","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","shaderLoader","Float32Array","count","cells","cellsBuffer","ELEMENT_ARRAY_BUFFER","setCells","Int16Array","drawElements","TRIANGLES","UNSIGNED_SHORT","ctx","p1","p2","p","lineStyle","arc","PI","fill","fillText","toString","beginPath","lineWidth","moveTo","lineTo","stroke","drawLine","mark","drawPoint","v1","v2","abs","bezierCurveTo","distance"],"sourceRoot":""}